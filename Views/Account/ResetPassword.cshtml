@model vnMentor.Models.ResetPasswordViewModel
@using vnMentor.Resources

@{
    ViewBag.Title = Resource.ResetPassword;
}

@using (Html.BeginForm("ResetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post,null, new { @class = "form-horizontal", role = "form" }))
{
	@Html.HiddenFor(m=>m.Code)
	@Html.AntiForgeryToken();
}

@await Html.PartialAsync("~/Views/Shared/_Notification.cshtml")
<style>
.section-background {
    position: relative;
    overflow: hidden;
    height: 100vh;
}

.carousel-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
}

.carousel-item {
    height: 100vh;
}

.carousel-item img {
    object-fit: cover;
    width: 100%;
    height: 100%;
}

.section-content {
    position: relative;
    z-index: 2;
    padding: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    padding-top: 0px !important;
}

.form-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Đảm bảo rằng không gian được phân bổ đều giữa các phần tử */
    position: relative;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 20px;
    padding: 2rem;
    width: 100%;
    max-width: 800px;
    margin: auto; /* Center the form-wrapper */
    height: 100%; /* Đảm bảo rằng form-wrapper chiếm hết chiều cao của khu vực chứa nó */
    margin-bottom: 100px;
}

.wrapper-logo {
    margin: 20px 0 80px; /* Điều chỉnh khoảng cách dưới logo nếu cần */
    font-size: 35px;
    font-weight: 600;
    text-align: center;
    line-height: 100px;
    color: #fff;
    user-select: none;
    border-radius: 15px 15px 0 0;
    @* background-color: rgba(128, 128, 128, 0.582); *@
}

.logo-img {
    width: 70%; /* Thay đổi kích thước của logo nếu cần */
    height: auto;
    display: block;
    margin-left: auto;
    margin-right: auto;
}

#submit {
    padding: 20px 60px;
    background-color: #000;
    border: none;
    font-size: 18px;
    position: relative;
    overflow: hidden;
    transition: 200ms;
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5);
    width: 100%;
}

#submit span {
    color: #231e20;
    position: relative;
    transition: 200ms;
    transition-delay: 200ms;
    font-size: 16px;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: 600;
}

#submit:before {
    content: '';
    position: absolute;
    width: 0%;
    height: 0%;
    left: 50%;
    right: 50%;
    top: 50%;
    bottom: 50%;
    transition: 200ms;
    transition-delay: 200ms;
    background-color: #e87900;
    box-shadow: 0 0 10px #e87900, 0 0 30px #e87900, 0 0 50px #e87900;
}

#submit div {
    transition: 200ms;
    position: absolute;
    background-color: #fff;
    box-shadow: 0 0 15px #e87900, 0 0 30px #e87900, 0 0 50px #e87900;
}

#submit .top {
    width: 15px;
    height: 2px;
    top: 0;
    left: 0;
}

#submit .bottom {
    width: 15px;
    height: 2px;
    bottom: 0;
    right: 0;
}

#submit .left {
    width: 2px;
    height: 15px;
    top: 0;
    left: 0;
}

#submit .right {
    width: 2px;
    height: 15px;
    bottom: 0;
    right: 0;
}

#submit:hover {
    color: #fff;
}

#submit:hover span {
    color: #fff;
}

#submit:hover:before {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

#submit:hover .top,
#submit:hover .bottom {
    width: 100%;
}

#submit:hover .left,
#submit:hover .right {
    height: 100%;
}
</style>

<div class="section-background">
    <div id="loginCarousel" class="carousel slide carousel-background" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#loginCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#loginCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#loginCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
        </div>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="https://res.cloudinary.com/tedydev/image/upload/vnMentor/slide/Slider_01.png" class="d-block w-100" alt="Login 1" />
            </div>
            <div class="carousel-item">
                <img src="https://res.cloudinary.com/tedydev/image/upload/vnMentor/slide/Slider_02.png" class="d-block w-100" alt="Login 2" />
            </div>
            <div class="carousel-item">
                <img src="https://res.cloudinary.com/tedydev/image/upload/vnMentor/slide/Slider_03.png" class="d-block w-100" alt="Login 3" />
            </div>
        </div>
    </div>

    <section class="py-10 px-3 px-sm-5 section-content">
        <div class="container">
            <div class="row justify-content-center align-items-center gx-0 gx-sm-5">
                <div class="col-lg-6" id="wrapper">
                        <div class="wrapper-logo">
                            <img src="https://res.cloudinary.com/tedydev/image/upload/vnMentor/logo/vnMentor_largeLogo.png" alt="vnMentor Logo" class="logo-img" />
                        </div>
                    <div class="form-wrapper">
                        <h1 class="fw600 pb-2 title-lg"><span class="color-primarycolor">@Resource.Reset</span> @Resource.YourPassword</h1>
                <div class="pb-3">@Resource.Pleasefillinthefollowing</div>
                @Html.ValidationSummary("", new { @class = "invalid-message" })
                @using (Html.BeginForm("ResetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post,null, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.HiddenFor(m=>m.Code)
                    @Html.AntiForgeryToken();
                    <div class="mb-3 text-break">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label required fw600" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "invalid-message" })
                        </div>
                    </div>
                    <div class="mb-3 text-break">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label required fw600" })
                            <i class="fa-solid fa-circle-info text-info" data-bs-toggle="tooltip" data-bs-placement="right"
                               title="@Resource.PasswordRequirementText"></i>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "invalid-message" })
                        </div>
                    </div>
                    <div class="mb-3 text-break">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label required fw600", @for = "ConfirmPassword" })
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password", @id = "ConfirmPassword" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "invalid-message" })
                        </div>
                    </div>
                    <button type="submit" class="btn form-btn btn-primary hover-boxshadow hover-moveup">@Resource.Submit</button>
                }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Lấy ra form và iframe overlay
            const form = document.querySelector('form');
            const loadingOverlay = document.getElementById('loadingOverlay');
            let iframeLoaded = false; // Biến để theo dõi trạng thái của iframe

            // Bắt sự kiện khi iframe load xong
            document.getElementById('loadingIframe').onload = function() {
                // Cập nhật trạng thái khi iframe load xong
                iframeLoaded = true;
            };

            // Hàm để chuyển trang sau khi delay
            function goToNextPage() {
                // Khóa mọi hành động của người dùng và ngăn chặn cuộn trang
                document.body.style.pointerEvents = 'none';
                document.body.style.overflow = 'hidden';
                setTimeout(function() {
                    form.submit(); // Thực hiện submit form sau 5 giây
                }, 500);
            }

            // Bắt sự kiện khi form submit
            form.addEventListener('submit', function(event) {
                // Ngăn chặn hành động mặc định của form
                event.preventDefault();

                // Hiển thị iframe overlay
                loadingOverlay.style.display = 'block';

                // Nếu iframe đã hoàn tất, thì chuyển trang
                if (iframeLoaded) {
                    goToNextPage();
                } else {
                    // Nếu chưa hoàn tất, thì đợi đến khi hoàn tất và chuyển trang sau đó
                    document.getElementById('loadingIframe').onload = function() {
                        goToNextPage();
                    };
                }
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
