/*!
 Print button for Buttons and DataTables.
 2016 SpryMedia Ltd - datatables.net/license
*/
!function (t) { "function" == typeof define && define.amd ? define(["jquery", "datatables.net", "datatables.net-buttons"], (function (e) { return t(e, window, document) })) : "object" == typeof exports ? module.exports = function (e, n) { return e || (e = window), n && n.fn.dataTable || (n = require("datatables.net")(e, n).$), n.fn.dataTable.Buttons || require("datatables.net-buttons")(e, n), t(n, e, e.document) } : t(jQuery, window, document) }((function (t, e, n, o) { var r = t.fn.dataTable, a = n.createElement("a"), i = function (t) { return a.href = t, -1 === (t = a.host).indexOf("/") && 0 !== a.pathname.indexOf("/") && (t += "/"), a.protocol + "//" + t + a.pathname + a.search }; return r.ext.buttons.print = { className: "buttons-print", text: function (t) { return t.i18n("buttons.print", "Print") }, action: function (n, r, a, s) { n = r.buttons.exportData(t.extend({ decodeEntities: !1 }, s.exportOptions)), a = r.buttons.exportInfo(s); var u = r.columns(s.exportOptions.columns).flatten().map((function (t) { return r.settings()[0].aoColumns[r.column(t).index()].sClass })).toArray(), d = function (t, e) { for (var n = "<tr>", r = 0, a = t.length; r < a; r++)n += "<" + e + " " + (u[r] ? 'class="' + u[r] + '"' : "") + ">" + (null === t[r] || t[r] === o ? "" : t[r]) + "</" + e + ">"; return n + "</tr>" }, l = '<table class="' + r.table().node().className + '">'; s.header && (l += "<thead>" + d(n.header, "th") + "</thead>"), l += "<tbody>"; for (var c = 0, f = n.body.length; c < f; c++)l += d(n.body[c], "td"); l += "</tbody>", s.footer && n.footer && (l += "<tfoot>" + d(n.footer, "th") + "</tfoot>"), l += "</table>"; var m = e.open("", ""); if (m) { m.document.close(); var b = "<title>" + a.title + "</title>"; t("style, link").each((function () { var e = b, n = t(this).clone()[0]; "link" === n.nodeName.toLowerCase() && (n.href = i(n.href)), b = e + n.outerHTML })); try { m.document.head.innerHTML = b } catch (e) { t(m.document.head).html(b) } m.document.body.innerHTML = "<h1>" + a.title + "</h1><div>" + (a.messageTop || "") + "</div>" + l + "<div>" + (a.messageBottom || "") + "</div>", t(m.document.body).addClass("dt-print-view"), t("img", m.document.body).each((function (t, e) { e.setAttribute("src", i(e.getAttribute("src"))) })), s.customize && s.customize(m, s, r), n = function () { s.autoPrint && (m.print(), m.close()) }, navigator.userAgent.match(/Trident\/\d.\d/) ? n() : m.setTimeout(n, 1e3) } else r.buttons.info(r.i18n("buttons.printErrorTitle", "Unable to open print view"), r.i18n("buttons.printErrorMsg", "Please allow popups in your browser for this site to be able to view the print view."), 5e3) }, title: "*", messageTop: "*", messageBottom: "*", exportOptions: {}, header: !0, footer: !1, autoPrint: !0, customize: null }, r.Buttons }));